import itertools


class Solution:
    def missingRolls(self, rolls, mean, n):
        m = len(rolls)
        sumofm = sum(rolls)
        sumofn = mean * (n + m) - sumofm

        if sumofn <= 0 and n:
            return []
        if sumofn // 6 > n:
            return []
        if sumofn // 6 == n and sumofn % 6 != 0:
            return []

        #print("sumofn", sumofn)
        dice = [1, 2, 3, 4, 5, 6]
        for comb in itertools.combinations_with_replacement(dice, n):
            if sum(comb) == sumofn:
                return comb
        #sumofn%n
        return []

sol = Solution()
rolls = [4,1,4,3,3,5,3,5,4,2,3,1,2,6,2,4,2,5,5,5,2,2,4,6,6,5,3,1,5,1,1,1,3,1,2,1,3,2,2,5,2,1,6,5,2,2,5,2,5,3,1,2,6,3,6,
1,1,6,1,3,5,5,3,5,5,3,1,6,5,1,6,4,1,3,3,6,3,3,3,6,1,3,2,4,4,5,6,6,3,4,3,2,5,6,2,6,5,1,4,4,5,2,2,6,4,2,3,5,3,
3,4,6,3,6,2,3,1,2,2,5,2,3,5,5,3,4,1,4,4,3,4,5,4,3,4,1,3,2,5,1,5,4,3,6,5,2,1,1,2,2,6,5,6,4,1,6,5,5,6,3,5,3,2,6,2,3,5,6,6,3,4,5,6,6,3,1,5,4,6,6,3,3,2,5,6,3,2,1,3,1,6,6,5,4,2,5,5,1,4,5,3,5,1,3,4,3,5,3,5,3,6,3,6,4,2,3,2,4,1,1,1,6,1,3,5,3,4,4,3,6,1,6,2,1,4,1,2,6,4,3,4,2,5,2,6,1,4,1,1,5,5,4,2,3,4,5,1,5,1,4,6,6,3,6,6,1,6,2,5,3,6,2,5,3,3,3,6,4,5,3,3,3,6,3,2,6,3,2,3,3,5,5,5,3,6,5,1,6,4,5,1,4,1,5,1,3,3,1,5,5,6,4,6,2,5,2,1,3,5,6,5,4,5,2,1,6,6,6,5,5,5,6,1,4,6,4,4,5,5,3]
mean = 5
n = 10240
print(sol.missingRolls(rolls, mean, n))
